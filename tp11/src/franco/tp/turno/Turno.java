package franco.tp.turno;
import franco.tp.medico.Medico;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Turno extends javax.swing.JFrame {

    private String nombreUsuario;

    public Turno() {
        initComponents();
        setSize(400,300);
        setTitle("turnos");
        CargoMedicos();
    }
    private void CargoMedicos(){
        Medico m = new Medico();
        MyECB.removeAllItems();
        for (Map.Entry<String, String> entry : m.getMedico().entrySet()) {
            MyECB.addItem(entry.getKey() + " - " + entry.getValue());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        EnterB = new javax.swing.JToggleButton();
        visitDateL = new javax.swing.JLabel();
        dateField = new javax.swing.JFormattedTextField();
        MyECB = new javax.swing.JComboBox<>();
        doctorNameL = new javax.swing.JLabel();
        turnosL = new javax.swing.JLabel();
        backgroundImage = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(102, 255, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        EnterB.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        EnterB.setText("ENTER");
        EnterB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterBActionPerformed(evt);
            }
        });
        getContentPane().add(EnterB);
        EnterB.setBounds(160, 220, 70, 30);

        visitDateL.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        visitDateL.setText("enter desired visit date (d/m/a) :");
        getContentPane().add(visitDateL);
        visitDateL.setBounds(30, 170, 180, 16);

        dateField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });
        getContentPane().add(dateField);
        dateField.setBounds(220, 170, 150, 22);

        MyECB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MyECB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MyECBActionPerformed(evt);
            }
        });
        getContentPane().add(MyECB);
        MyECB.setBounds(170, 110, 180, 22);

        doctorNameL.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        doctorNameL.setText("select a doctor :");
        getContentPane().add(doctorNameL);
        doctorNameL.setBounds(70, 110, 90, 16);

        turnosL.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 36)); // NOI18N
        turnosL.setText("TURNOS");
        getContentPane().add(turnosL);
        turnosL.setBounds(130, 20, 150, 48);

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imageBackground/turno.png"))); // NOI18N
        getContentPane().add(backgroundImage);
        backgroundImage.setBounds(0, 0, 400, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MyECBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MyECBActionPerformed
        
    }//GEN-LAST:event_MyECBActionPerformed

    private void EnterBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterBActionPerformed
        try {                                               
            SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");        //dar formato de fecha
            Date fa= new Date();
            String fas= sdf.format(fa);
            Date fechaActual=sdf.parse(fas);
            String fechaTurnoS=dateField.getText();
            Date fechaTurno=sdf.parse(fechaTurnoS);
            
            String nombreM=MyECB.getSelectedItem().toString();
            /*implementar codigo para que fechaTurno sea despues de fechaActual,corte
                .
            if(fechaTurno.after (fechaActual)){
                w.write("Usuario: " + nombreUsuario +", Fecha: " + fechaTurno + ", Médico: " + nombreM);
            }else{
                new JDialog();//imprima un mensaje tipo pop-up de error
            }
           */
            if(fechaTurno.after(fechaActual)){
                try (BufferedWriter w = new BufferedWriter(new FileWriter("turnos.txt", true))) {
                w.write("Usuario: " + nombreUsuario +", Fecha: " + fechaTurno + ", Médico: " + nombreM);
                w.newLine();
                System.out.println("Turno guardado exitosamente.");
                } catch (IOException e) {
                    System.out.println("Error al guardar el turno: " + e.getMessage());
                }
            }
            
            if(!(fechaTurno.after(fechaActual ))){
                new IncorrectlyEnteredDate();
                IncorrectlyEnteredDateException iede = new IncorrectlyEnteredDateException();
                
                try {
                    throw iede;
                } catch (IncorrectlyEnteredDateException ex) {
                    Logger.getLogger(Turno.class.getName()).log(Level.SEVERE, null, ex);
                }
            }            

        } catch (ParseException ex) {
            new IncorrectTypeOfDate();
            IncorrectTypeOfDateException itode=new IncorrectTypeOfDateException();//exception que 
            try {
                //se encarga del error de tipo de dato ingresado en fecha
                throw itode;
                //Logger.getLogger(Turno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IncorrectTypeOfDateException ex1) {
                Logger.getLogger(Turno.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }//GEN-LAST:event_EnterBActionPerformed

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed
    
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Turno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Turno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Turno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Turno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Turno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton EnterB;
    private javax.swing.JComboBox<String> MyECB;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JFormattedTextField dateField;
    private javax.swing.JLabel doctorNameL;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel turnosL;
    private javax.swing.JLabel visitDateL;
    // End of variables declaration//GEN-END:variables

    public void pasoNombre(String key) {
        this.nombreUsuario = key;
    }
}
